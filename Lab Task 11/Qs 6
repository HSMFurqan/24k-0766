#include <stdio.h>
#include <stdlib.h>
#include <string.h>
typedef struct {
    char city[50];
    int zip_code;
} Address;
typedef struct {
    char name[50];
    int id;
    float salary;
    Address address;
} Employee;
void writeToFile(Employee *employees, int count, const char *filename) {
    FILE *file = fopen(filename, "wb");
    if (file == NULL) {
        printf("Error: Could not open file for writing.\n");
        exit(1);
    }
    fwrite(employees, sizeof(Employee), count, file);
    fclose(file);
}
void readFromFile(const char *filename) {
    FILE *file = fopen(filename, "rb");
    if (file == NULL) {
        printf("Error: Could not open file for reading.\n");
        exit(1);
    }
    Employee employee;
    printf("\nEmployee Details:\n");
    while (fread(&employee, sizeof(Employee), 1, file)) {
        printf("Name: %s\n", employee.name);
        printf("ID: %d\n", employee.id);
        printf("Salary: %.2f\n", employee.salary);
        printf("City: %s\n", employee.address.city);
        printf("Zip Code: %d\n\n", employee.address.zip_code);
    }
    fclose(file);
}
int main() {
    int n;
    printf("Enter the number of employees: ");
    scanf("%d", &n);
    Employee employees[n];
    for (int i = 0; i < n; i++) {
        printf("\nEnter details for employee %d:\n", i + 1);
        printf("Name: ");
        getchar();
        fgets(employees[i].name, sizeof(employees[i].name), stdin);
        employees[i].name[strcspn(employees[i].name, "\n")] = '\0';
        printf("ID: ");
        scanf("%d", &employees[i].id);
        printf("Salary: ");
        scanf("%f", &employees[i].salary);
        printf("City: ");
        getchar();
        fgets(employees[i].address.city, sizeof(employees[i].address.city), stdin);
        employees[i].address.city[strcspn(employees[i].address.city, "\n")] = '\0';
        printf("Zip Code: ");
        scanf("%d", &employees[i].address.zip_code);
    }
    const char *filename = "employees.dat";
    writeToFile(employees, n, filename);
    readFromFile(filename);
    return 0;
}
