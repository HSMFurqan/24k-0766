Approach :
To count the occurrences of each word in a text file, we can use the following steps:
1.Open the file in read mode and read its contents line by line.
2.Use space and punctuation as delimiters to extract individual words.
3.Convert words to lowercase to ensure case-insensitivity.
4.Use a data structure like a hash table or array to store the frequency of each word.
5.Print the word-frequency pairs.

Code :
#include <stdio.h>
typedef struct {
    char word[50];
    int count;
} WordCount;
int compareWords(char *word1, char *word2) {
    int i = 0;
    while (word1[i] != '\0' && word2[i] != '\0') {
        if (word1[i] != word2[i]) {
            return 0;
        }
        i++;
    }
    return word1[i] == '\0' && word2[i] == '\0';
}
void toLowerCase(char *word) {
    int i = 0;
    while (word[i] != '\0') {
        if (word[i] >= 'A' && word[i] <= 'Z') {
            word[i] = word[i] + ('a' - 'A');
        }
        i++;
    }
}
int main() {
    FILE *file;
    char fileName[100];
    char currentWord[50];
    WordCount words[1000];
    int wordCount = 0;
    printf("Enter the name of the file: ");
    scanf("%s", fileName);
    file = fopen(fileName, "r");
    if (file == NULL) {
        printf("Error: Could not open file.\n");
        return 1;
    }
    while (fscanf(file, "%49s", currentWord) == 1) {
        toLowerCase(currentWord);
        int found = 0;
        for (int i = 0; i < wordCount; i++) {
            if (compareWords(words[i].word, currentWord)) {
                words[i].count++;
                found = 1;
                break;
            }
        }
        if (!found) {
            int j = 0;
            while (currentWord[j] != '\0') {
                words[wordCount].word[j] = currentWord[j];
                j++;
            }
            words[wordCount].word[j] = '\0';
            words[wordCount].count = 1;
            wordCount++;
        }
    }
    fclose(file);
    printf("Word Frequencies:\n");
    for (int i = 0; i < wordCount; i++) {
        printf("%s: %d\n", words[i].word, words[i].count);
    }
    return 0;
}
